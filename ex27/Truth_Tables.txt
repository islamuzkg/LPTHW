# The Truth Table
# Sometime typing things will help you to memorize them.
# We'll need to memorize below truth tables, we will be using them when we create logics.
+---------------+---------------+
|NOT		|True?		|
+-------------------------------+
|not False	|True		|
+---------------+---------------+
|not True	|False		|
+---------------+---------------+

***********************************************

+----------------+---------------+
|OR              |True?          |
+----------------+---------------+
|True or False   |True           |
+----------------+---------------+
|True or True    |True           |
+----------------+---------------+
|False or True   |True           |
+----------------+---------------+
|False or False  |False          |
+----------------+---------------+

***********************************************

+-----------------+---------------+
|AND              |True?          |
+-----------------+---------------+
|True and False   |False          |
+-----------------+---------------+
|True and True    |True           |
+-----------------+---------------+
|False and True   |False          |
+-----------------+---------------+
|False and False  |False          |
+-----------------+---------------+

So, if we use and with any two operands and if both of them are True, then the result is True. Otherwise, it is False

And if we are using or and if any of the two operands is True, then it is True and it will be False if both the operands are False.

'and' can be understood as both ( first and second both )
'or' can be understood as either ( first or second any ). See the next line to understand it more clearly.

'and' and 'or' of programming are very much similar to English words 'and' and 'or'. 

In English, 
A and B - Both A and B. 
A or B - Either A or B. 

In programming, 
A and B - Both A and B. 
A or B - Either A or B or both. 

So, if you are writing A and B, then the expression is true if both A and B are true. Whereas, if you are writing A or B, then the expression is true if either A or B or both are true.

True or False -> As 'or' is used, either of the two is true -> True
True and False -> As 'and' is used, both are not true -> False

************************************************

+-----------------------+---------------+
|NOT OR                 |True?          |
+-----------------------+---------------+
|not (True or False)   |False           |
+-----------------------+---------------+
|not (True or True)    |False           |
+-----------------------+---------------+
|not (False or True)   |False           |
+-----------------------+---------------+
|not (False or False)  |True            |
+-----------------------+---------------+


************************************************

+-----------------------+---------------+
|NOT AND                |True?          |
+-----------------------+---------------+
|not (True and False)   |True           |
+-----------------------+---------------+
|not (True and True)    |False          |
+-----------------------+---------------+
|not (False and True)   |True           |
+-----------------------+---------------+
|not (False and False)  |True           |
+-----------------------+---------------+

***********************************************

+------------+-------------+
|!=          |True?        |
+------------+-------------+
|1 != 0      |True         |
+----- ------+-------------+
|1 != 1      |False        |
+------------+-------------+
|0 != 1      |True         |
+------------+-------------+
|0 != 0      |False        |
+------------+-------------+

***********************************************

+------------+-------------+
|==          |True?        |
+------------+-------------+
|1 == 0      |False        |
+----- ------+-------------+
|1 == 1      |True         |
+------------+-------------+
|0 == 1      |False        |
+------------+-------------+
|0 == 0      |True         |
+------------+-------------+
